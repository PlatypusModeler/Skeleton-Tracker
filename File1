<!DOCTYPE html>
<html>
<head>
  <title>Skeleton Only Tracker</title>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/pose-detection"></script>
  <script src="https://cdn.jsdelivr.net/npm/@mediapipe/pose"></script>
</head>
<body style="margin:0; background:black; overflow:hidden;">
  <canvas id="output" width="640" height="480"></canvas>

  <script>
    async function run() {
      const video = document.createElement("video");
      video.width = 640;
      video.height = 480;
      video.autoplay = true;

      // Ask for webcam
      const stream = await navigator.mediaDevices.getUserMedia({ video: true });
      video.srcObject = stream;

      const detector = await poseDetection.createDetector(
        poseDetection.SupportedModels.MoveNet,
        { modelType: poseDetection.movenet.modelType.SINGLEPOSE_LIGHTNING }
      );

      const canvas = document.getElementById("output");
      const ctx = canvas.getContext("2d");

      async function detect() {
        ctx.fillStyle = "black";
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        const poses = await detector.estimatePoses(video);

        if (poses.length > 0) {
          const keypoints = poses[0].keypoints;
          ctx.strokeStyle = "lime";
          ctx.lineWidth = 3;

          const edges = [
            [5,7],[7,9],   // left arm
            [6,8],[8,10],  // right arm
            [5,6],         // shoulders
            [5,11],[6,12], // torso
            [11,13],[13,15], // left leg
            [12,14],[14,16]  // right leg
          ];

          edges.forEach(([a,b]) => {
            if (keypoints[a].score > 0.4 && keypoints[b].score > 0.4) {
              ctx.beginPath();
              ctx.moveTo(keypoints[a].x, keypoints[a].y);
              ctx.lineTo(keypoints[b].x, keypoints[b].y);
              ctx.stroke();
            }
          });

          keypoints.forEach(kp => {
            if (kp.score > 0.4) {
              ctx.beginPath();
              ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);
              ctx.fillStyle = "red";
              ctx.fill();
            }
          });
        }

        requestAnimationFrame(detect);
      }
      detect();
    }
    run();
  </script>
</body>
</html>
